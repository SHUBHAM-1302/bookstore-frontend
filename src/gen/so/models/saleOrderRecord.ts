/**
 * SaleOrder
 * This would cover the definition and documentation of the sale order along with the REST end point, incoming request payload format and different responses for creating a sale order and frieght. All the REST end points would use the host and port defined by the admin and the end points would follow the usual standards and best practices as defined on the general REST API documentations. The http method type would define the underlying action.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: merco@kanilenttu.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { LotSummary } from './lot-summary';
import { Receiver } from './receiver';
import { SaleOrderStatus } from './sale-order-status';
import { UpsertInfo } from './upsert-info';

export interface SaleOrderRecord { 
    /**
     * Sale Order id generated on successful insertion
     */
    readonly soid?: string;
    receiverDetails?: Receiver;
    /**
     * Vehicle Number carrying the Freight
     */
    vehcileNumber?: string;
    isSelfSale?: boolean;
    /**
     * The total amount calculated
     */
    freightChargesAmt?: number;
    /**
     * Freight type name to be displayed
     */
    rentalData?: boolean;
    /**
     * Freight type name to be displayed
     */
    rentalAdvance?: number;
    status?: SaleOrderStatus;
    /**
     * address summary
     */
    location?: string;
    /**
     * SO Creation date
     */
    createdAt?: Date;
    /**
     * total
     */
    lotsummary?: Array<LotSummary>;
    /**
     * details of lot label and count
     */
    lots?: Array<string>;
    /**
     * Number of seller for given SO
     */
    sellerCt?: number;
    upsertInfo?: UpsertInfo;
}