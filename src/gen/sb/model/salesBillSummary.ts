/**
 * Salesbill
 * This would cover the definition and documentation of the Mercodesk sales bills for the commidities completed the bids and weighing. Operation involves creation on sales bill for the salespad items, commission, brokerage and pending bill details Salesbill is mainly targets the buyer and broker and provide the draft bill to be settled with merchants. REST end points would use the host and port defined by the admin and the end points would follow the usual standards and best practices as defined on the general REST API documentations. The http method type would define the underlying action.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: merco@kanilebettu.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { SBLotBid } from './sBLotBid';
import { SalesBillRequisite } from './salesBillRequisite';
import { SalesBillStatus } from './salesBillStatus';
import { UpsertInfo } from './upsertInfo';

export interface SalesBillSummary {
    /**
     * The salesbill generated uuid
     */
    readonly sbId?: string;
    /**
     * The entity from this bill is generated
     */
    readonly tenantId?: string;
    readonly userName?: string;
    readonly firstName?: string;
    readonly lastName?: string;
    /**
     * The number pages of  salesbill
     */
    readonly totalPages?: number;
    /**
     * The number elements in  salesbill
     */
    readonly totalElements?: number;
    /**
     * The prefix assigned to this salesbill
     */
    readonly salesbillprefix?: string;
    /**
     * The number generated for the salesbill
     */
    readonly salesbillNo?: number;
    /**
     * financialYear generated
     */
    readonly financialYear?: string;
    brokerageStatus?: SalesBillSummary.BrokerageStatusEnum;
    coolieStatus?: SalesBillSummary.CoolieStatusEnum;
    frightStatus?: SalesBillSummary.FrightStatusEnum;
    SalesBillRequisite?: SalesBillRequisite;
    SBLots?: Array<SBLotBid>;
    billStatus?: SalesBillStatus;
    upsertInfo?: UpsertInfo;
}
export namespace SalesBillSummary {
    export type BrokerageStatusEnum = 'SB_BROKERAGE_OPEN' | 'SB_BROKERAGE_PAYMENT_PENDING' | 'SB_BROKERAGE_CLOSED' | 'SB_BROKERAGE_PRINTED' | 'SB_BROKERAGE_CANCELLED';
    export const BrokerageStatusEnum = {
        OPEN: 'SB_BROKERAGE_OPEN' as BrokerageStatusEnum,
        PAYMENTPENDING: 'SB_BROKERAGE_PAYMENT_PENDING' as BrokerageStatusEnum,
        CLOSED: 'SB_BROKERAGE_CLOSED' as BrokerageStatusEnum,
        PRINTED: 'SB_BROKERAGE_PRINTED' as BrokerageStatusEnum,
        CANCELLED: 'SB_BROKERAGE_CANCELLED' as BrokerageStatusEnum
    };
    export type CoolieStatusEnum = 'SB_COOLIE_OPEN' | 'SB_COOLIE_PAYMENT_PENDING' | 'SB_COOLIE_CLOSED' | 'SB_COOLIE_PRINTED' | 'SB_COOLIE_CANCELLED';
    export const CoolieStatusEnum = {
        OPEN: 'SB_COOLIE_OPEN' as CoolieStatusEnum,
        PAYMENTPENDING: 'SB_COOLIE_PAYMENT_PENDING' as CoolieStatusEnum,
        CLOSED: 'SB_COOLIE_CLOSED' as CoolieStatusEnum,
        PRINTED: 'SB_COOLIE_PRINTED' as CoolieStatusEnum,
        CANCELLED: 'SB_COOLIE_CANCELLED' as CoolieStatusEnum
    };
    export type FrightStatusEnum = 'SB_FREIGHT_OPEN' | 'SB_FREIGHT_PAYMENT_PENDING' | 'SB_FREIGHT_CLOSED' | 'SB_FREIGHT_PRINTED' | 'SB_FREIGHT_CANCELLED';
    export const FrightStatusEnum = {
        OPEN: 'SB_FREIGHT_OPEN' as FrightStatusEnum,
        PAYMENTPENDING: 'SB_FREIGHT_PAYMENT_PENDING' as FrightStatusEnum,
        CLOSED: 'SB_FREIGHT_CLOSED' as FrightStatusEnum,
        PRINTED: 'SB_FREIGHT_PRINTED' as FrightStatusEnum,
        CANCELLED: 'SB_FREIGHT_CANCELLED' as FrightStatusEnum
    };
}